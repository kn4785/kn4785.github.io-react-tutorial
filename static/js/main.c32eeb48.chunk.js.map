{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","onFormSubmit","preventDefault","handleSubmit","state","initialState","console","log","this","for","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"iPAIMA,G,KAAc,WAChB,OACE,+BACE,4BACE,oCACA,mCACA,0CAMFC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACrC,OACA,wBAAIC,IAAOD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,gCAAK,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKb,OAAO,+BAAQJ,IAeRU,EAZC,SAACX,GAAW,IAChBE,EAAmCF,EAAnCE,cAAeQ,EAAoBV,EAApBU,gBAEvB,OACI,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,M,OCqBrDE,E,YAtDb,WAAYZ,GAAQ,IAAD,8BACjB,4CAAMA,KAURa,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBR,EADc,EACdA,KAAMS,EADQ,EACRA,MAEd,EAAKC,SAAL,eACGV,EAAOS,KAfO,EAmBnBE,aAAe,SAACJ,GACdA,EAAMK,iBAEN,EAAKnB,MAAMoB,aAAa,EAAKC,OAC7B,EAAKJ,SAAS,EAAKK,cACnBC,QAAQC,IAAI,YArBZ,EAAKF,aAAe,CAClBf,KAAM,GACNC,IAAK,IAGP,EAAKa,MAAQ,EAAKC,aARD,E,sEA4BT,IAAD,EACeG,KAAKJ,MAAnBd,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACI,8BACE,2BAAOkB,IAAI,QAAX,QACA,2BACEC,KAAK,OACLpB,KAAK,OACLqB,GAAG,OACHZ,MAAOT,EACPsB,SAAUJ,KAAKZ,eACjB,2BAAOa,IAAI,OAAX,OACA,2BACEC,KAAK,OACLpB,KAAK,MACLqB,GAAG,MACHZ,MAAOR,EACPqB,SAAUJ,KAAKZ,eACP,2BAAOc,KAAK,SAASX,MAAM,SAASP,QAASgB,KAAKP,oB,GAhDnDY,aCqCFC,E,2MAhCbV,MAAQ,CACJW,WAAY,I,EAGhBtB,gBAAkB,SAAAL,GAAU,IAChB2B,EAAe,EAAKX,MAApBW,WAER,EAAKf,SAAS,CACVe,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM9B,Q,EAKnBe,aAAe,SAAAc,GACX,EAAKjB,SAAS,CAAEe,WAAW,GAAD,mBAAM,EAAKX,MAAMW,YAAjB,CAA6BE,O,wEAIrD,IACEF,EAAeP,KAAKJ,MAApBW,WAGV,OACE,yBAAKI,UAAU,aACf,kBAAC,EAAD,CAAOlC,cAAe8B,EAAYtB,gBAAiBe,KAAKf,kBACxD,kBAAC,EAAD,CAAMU,aAAcK,KAAKL,oB,GA3BfU,aCOhBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c32eeb48.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.css'\r\n\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Job</th>\r\n          <th>Remove</th>\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n\r\n  const TableBody = props => {\r\n      const rows = props.characterData.map((row, index) => {\r\n            return (\r\n            <tr key = {index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td> <button onClick={() => props.removeCharacter(index)}>Delete</button></td>\r\n            </tr>\r\n            )\r\n        })\r\n\r\n        return <tbody>{rows}</tbody>\r\n  }\r\n\r\n  const Table = (props) => {\r\n    const { characterData, removeCharacter } = props;\r\n\r\n    return (\r\n        <table>\r\n          <TableHeader />\r\n          <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n        </table>\r\n      );\r\n    }\r\n\r\n\r\nexport default Table;","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.initialState = {\r\n      name: '',\r\n      job: '',\r\n    }\r\n\r\n    this.state = this.initialState\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target\r\n  \r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n    console.log(\"testing\")\r\n}\r\n\r\n\r\n  render() {\r\n    const { name, job } = this.state;\r\n  \r\n    return (\r\n        <form>\r\n          <label for=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange} />\r\n          <label for=\"job\">Job</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"job\"\r\n            id=\"job\"\r\n            value={job}\r\n            onChange={this.handleChange} />\r\n                    <input type=\"button\" value=\"Submit\" onClick={this.onFormSubmit} />\r\n        </form>\r\n      );\r\n    }\r\n\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react'\r\nimport Table from './Table'\r\nimport './index.css'\r\nimport Form from './Form';\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        characters: [],\r\n    }\r\n\r\n    removeCharacter = index => {\r\n        const { characters } = this.state \r\n    \r\n        this.setState({\r\n            characters: characters.filter((character, i) => {\r\n              return i !== index\r\n            }),\r\n          })\r\n        }\r\n    \r\n        handleSubmit = character => {\r\n            this.setState({ characters: [...this.state.characters, character] })\r\n          }\r\n    \r\n\r\n    render() {\r\n        const { characters } = this.state\r\n\r\n\r\n      return (\r\n        <div className=\"container\">\r\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n        <Form handleSubmit={this.handleSubmit} />\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default App\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n//import App from './Api';\nimport './index.css'\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n\n  \n  ReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}